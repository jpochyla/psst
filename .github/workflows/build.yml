name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive 

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Install ImageMagick on Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        choco install -y imagemagick.app --no-progress
        $IMFolder = Get-ChildItem -Path "${env:ProgramFiles}" | Where-Object {($_.Name -Like 'ImageMagick*')} | Select-Object "Name"
        $IMAbsolutePath = Join-Path -Path "${env:ProgramFiles}" -ChildPath $IMFolder.Name
        $IMAbsolutePath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo $IMAbsolutePath

    - name: Generate Icon for Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        magick convert .\logo_32.png -colors 256 logo_32_8bpp.png
        magick convert .\logo_32.png -colors 16 logo_32_4bpp.png
        magick convert .\logo_32.png -resize 16x16 -extent 16x16 logo_16.png
        magick convert .\logo_32.png -resize 16x16 -extent 16x16 -colors 256 logo_16_8bpp.png
        magick convert .\logo_32.png -resize 16x16 -extent 16x16 -colors 16 logo_16_4bpp.png
        magick convert .\logo_256.png .\logo_128.png .\logo_64.png .\logo_32.png .\logo_32_8bpp.png .\logo_32_4bpp.png .\logo_16.png .\logo_16_8bpp.png .\logo_16_4bpp.png .\logo.ico
      working-directory: psst-gui\assets

    - uses: Swatinem/rust-cache@v1

    - name: Update Linux Repositories
      run: sudo apt-get update
      if: ${{ runner.os == 'Linux' }}

    - name: Install Linux Dependencies
      run: sudo apt-get install -y libgtk-3-dev libssl-dev libasound2-dev
      if: ${{ runner.os == 'Linux' }}

    - name: Check Formatting
      run: cargo fmt --all -- --check

    - name: Run Tests
      run: cargo test
      continue-on-error: true

    - name: Build Release
      run: cargo build --release

    - name: Bundle macOS Release
      run: |
        cargo install cargo-bundle
        cargo bundle --release
      working-directory: psst-gui
      if: ${{ runner.os == 'macOS' }}
  
    - name: Create .dmg File
      run: |
        hdiutil create Psst-uncompressed.dmg -volname "Psst" -srcfolder target/release/bundle/osx
        hdiutil convert Psst-uncompressed.dmg -format UDZO -o Psst-x64.dmg
      if: ${{ runner.os == 'macOS' }}

    - name: Make Linux Binary Executable
      run: chmod +x target/release/psst-gui
      if: ${{ runner.os == 'Linux' }}

    - uses: actions/upload-artifact@v2
      with:
        name: psst-gui
        path: target/release/psst-gui
      if: ${{ runner.os == 'Linux' }}

    - uses: actions/upload-artifact@v2
      with:
        name: Psst-x64.dmg
        path: ./Psst-x64.dmg
      if: ${{ runner.os == 'macOS' }}

    - uses: actions/upload-artifact@v2
      with:
        name: Psst.exe
        path: target/release/psst-gui.exe
      if: ${{ runner.os == 'Windows' }}

  deb:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v2
      with:
        name: psst-gui
        path: ${{runner.workspace}}
    - name: Move executable
      run: mkdir -p ${{runner.workspace}}/pkg/usr/bin/; mv ${{runner.workspace}}/psst-gui $_
    - name: Move desktop
      run: mkdir -p ${{runner.workspace}}/pkg/usr/share/applications/; mv .pkg/psst.desktop $_
    - name: Set permissions
      run: chmod 755 ${{runner.workspace}}/pkg/usr/bin/psst-gui
    - name: Move license
      run: mkdir -p ${{runner.workspace}}/pkg/usr/share/doc/psst-gui/; mv .pkg/copyright $_
    - name: Move package config
      run: mkdir -p ${{runner.workspace}}/pkg/; mv .pkg/DEBIAN $_/
    - name: Set version
      run: "echo Version: $(git rev-list --count HEAD) >> ${{runner.workspace}}/pkg/DEBIAN/control"
    - name: Build package
      run: cat ${{runner.workspace}}/pkg/DEBIAN/control && dpkg-deb -b ${{runner.workspace}}/pkg/ psst_$(git rev-list --count HEAD)_amd64.deb
    - uses: actions/upload-artifact@v2
      with:
        name: psst-deb
        path: "*.deb"
